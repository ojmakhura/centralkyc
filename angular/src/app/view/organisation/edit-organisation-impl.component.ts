// Generated by andromda-angular cartridge (view\view.component.imp.ts.vsl) CAN EDIT!
import { Component, effect, inject, Input } from '@angular/core';
import { EditOrganisationComponent } from '@app/view/organisation/edit-organisation.component';
import { EditOrganisationVarsForm } from '@app/view/organisation/edit-organisation.component';
import { MatRadioChange } from '@angular/material/radio';
import { MatCheckboxChange } from '@angular/material/checkbox';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { TranslateModule } from '@ngx-translate/core';
import { MaterialModule } from '@app/material.module';
import { TableComponent } from '@app/components/table/table.component';
import { LoaderComponent } from "@app/@shared/loader/loader.component";
import { OrganisationApiStore } from '@app/store/bw/co/centralkyc/organisation/organisation-api.store';

@Component({
  selector: 'app-edit-organisation',
  templateUrl: './edit-organisation.component.html',
  styleUrls: ['./edit-organisation.component.scss'],
  standalone: true,
  imports: [
    CommonModule,
    FormsModule,
    ReactiveFormsModule,
    TranslateModule,
    MaterialModule,
    TableComponent,
    LoaderComponent,
  ],
})
export class EditOrganisationImplComponent extends EditOrganisationComponent {

  @Input() id: string | any;

  organisationApiStore = inject(OrganisationApiStore);

  override error = this.organisationApiStore.error;
  override messages = this.organisationApiStore.messages;
  override success = this.organisationApiStore.success;
  organisation = this.organisationApiStore.data;


  constructor() {
    super();

    effect(() => {
      let organisation = this.organisationApiStore.data();
      this.editOrganisationForm.patchValue(organisation);
    });
  }

  override beforeOnInit(form: EditOrganisationVarsForm): EditOrganisationVarsForm {

    this.organisationApiStore.reset();
    if (this.id) {
      this.organisationApiStore.findById({id: this.id});
    }

    return form;
  }

  doNgOnDestroy(): void {
  }

  override beforeEditOrganisationSave(form: any): void {

    this.organisationApiStore.save({organisation: this.editOrganisationForm.value});
  }
}
