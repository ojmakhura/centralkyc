// Generated by andromda-angular cartridge (view\view.component.imp.ts.vsl) CAN EDIT!
import { Component } from '@angular/core';
import { SearchIndividualsComponent } from '@app/view/individual/search-individuals.component';
import { SearchIndividualsVarsForm } from '@app/view/individual/search-individuals.component';
import { MatRadioChange } from '@angular/material/radio';
import { MatCheckboxChange } from '@angular/material/checkbox';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { TranslateModule } from '@ngx-translate/core';
import { MaterialModule } from '@app/material.module';
import { TableComponent } from '@app/components/table/table.component';
import { LoaderComponent } from '@app/@shared/loader/loader.component';
import { MatPaginator } from '@angular/material/paginator';

@Component({
  selector: 'app-search-individuals',
  templateUrl: './search-individuals.component.html',
  styleUrls: ['./search-individuals.component.scss'],
  standalone: true,
  imports: [
    CommonModule,
    FormsModule,
    ReactiveFormsModule,
    TranslateModule,
    MaterialModule,
    TableComponent,
    LoaderComponent,
  ],
})
export class SearchIndividualsImplComponent extends SearchIndividualsComponent {

  override error = this.individualApiStore.error;
  override messages = this.individualApiStore.messages;
  override success = this.individualApiStore.success;

  constructor() {
    super();
    this.individualsTableSignal = this.individualApiStore.dataPage;
    this.individualsTablePaged = true;
  }

  override beforeOnInit(form: SearchIndividualsVarsForm): SearchIndividualsVarsForm {
    return form;
  }

  doNgOnDestroy(): void {}

  override doNgAfterViewInit(): void {
    this.individualsTable?.tablePaginator?.page?.subscribe({
      next: (paginator: MatPaginator) => {
        this.doSearch(paginator.pageIndex, paginator.pageSize);
      },
    });

    this.doSearch();
  }

  override beforeSearchIndividualsSearch(form: any): void {
    this.doSearch();
  }

  private doSearch(pageNumber: number = 0, pageSize: number = 10): void {
    let criteria = this.criteriaControl.value;

    this.individualApiStore.pagedSearch({
      criteria: criteria ? criteria : '',
      pageNumber: pageNumber,
      pageSize: pageSize,
    });
  }
}
