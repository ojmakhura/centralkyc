// Generated by andromda-angular cartridge (view\view.component.imp.ts.vsl) CAN EDIT!
import { Component, computed, effect, inject, Signal } from '@angular/core';
import { EditDocumentTypeComponent } from '@app/view/document/type/edit-document-type.component';
import { EditDocumentTypeVarsForm } from '@app/view/document/type/edit-document-type.component';
import { MatRadioChange } from '@angular/material/radio';
import { MatCheckboxChange } from '@angular/material/checkbox';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { TranslateModule } from '@ngx-translate/core';
import { MaterialModule } from '@app/material.module';
import { TableComponent } from '@app/components/table/table.component';
import { LoaderComponent } from '@app/@shared/loader/loader.component';
import { DocumentTypeApiStore } from '@app/store/bw/co/centralkyc/document/type/document-type-api.store';

@Component({
  selector: 'app-edit-document-type',
  templateUrl: './edit-document-type.component.html',
  styleUrls: ['./edit-document-type.component.scss'],
  standalone: true,
  imports: [
    CommonModule,
    FormsModule,
    ReactiveFormsModule,
    TranslateModule,
    MaterialModule,
    TableComponent,
    LoaderComponent,
  ],
})
export class EditDocumentTypeImplComponent extends EditDocumentTypeComponent {
  documentTypeApiStore = inject(DocumentTypeApiStore);

  override error = this.documentTypeApiStore.error;
  override messages = this.documentTypeApiStore.messages;
  override success = this.documentTypeApiStore.success;

  constructor() {
    super();

    effect(() => {
      let documentType = this.documentTypeApiStore.data();
      this.editDocumentTypeForm.patchValue(documentType);
    });
  }

  override beforeOnInit(form: EditDocumentTypeVarsForm): EditDocumentTypeVarsForm {
    this.documentTypeApiStore.reset();

    this.route.queryParams.subscribe((params: any) => {
      if (params.id) {
        this.documentTypeApiStore.findById(params);
      }
    });
    return form;
  }

  doNgOnDestroy(): void {}

  override beforeEditDocumentTypeSave(form: any): void {
    this.documentTypeApiStore.save({ documentType: this.editDocumentTypeForm.value });
  }
}
