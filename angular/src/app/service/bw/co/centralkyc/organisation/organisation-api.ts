// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, inject } from '@angular/core';
import { Observable } from 'rxjs';
import { OrganisationDTO } from '@app/model/bw/co/centralkyc/organisation/organisation-dto';
import { OrganisationListDTO } from '@app/model/bw/co/centralkyc/organisation/organisation-list-dto';
import { HttpClient } from '@angular/common/http';
import { Page } from '@app/model/page.model';
import { SearchObject } from '@app/model/search-object';
import { RestApiResponse } from '@app/model/rest-api-response.model';

@Injectable({
  providedIn: 'root'
})
export class OrganisationApi {
    
    protected path = '/organisation';

    private http = inject(HttpClient);

    public findById(id: string | any ): Observable<RestApiResponse<OrganisationDTO | any>> {

        return this.http.get<RestApiResponse<OrganisationDTO | any>>(`${this.path}/${id}`);
    }

    public getAll(): Observable<RestApiResponse<OrganisationListDTO[] | any[]>> {

        return this.http.get<RestApiResponse<OrganisationListDTO[] | any[]>>(`${this.path}`);
    }

    public getAllPaged(pageNumber: number | any , pageSize: number | any ): Observable<RestApiResponse<Page<OrganisationListDTO> | any>> {

        return this.http.get<RestApiResponse<Page<OrganisationListDTO> | any>>(`${this.path}/page/${pageNumber}/size/${pageSize}`);
    }

    public pagedSearch(pageNumber: number | any , pageSize: number | any , criteria: string | any ): Observable<RestApiResponse<Page<OrganisationListDTO> | any>> {

        return this.http.get<RestApiResponse<Page<OrganisationListDTO> | any>>(`${this.path}/search/page/${pageNumber}/size/${pageSize}?criteria=${criteria}`);
    }

    public remove(id: string | any ): Observable<RestApiResponse<boolean | any>> {

        return this.http.delete<RestApiResponse<boolean | any>>(`${this.path}/${id}`);
    }

    public save(organisation: OrganisationDTO | any ): Observable<RestApiResponse<OrganisationDTO | any>> {

        return this.http.post<RestApiResponse<OrganisationDTO | any>>(`${this.path}`, organisation);
    }

    public search(criteria: string | any ): Observable<RestApiResponse<OrganisationListDTO[] | any[]>> {

        return this.http.post<RestApiResponse<OrganisationListDTO[] | any[]>>(`${this.path}/search?criteria=${criteria}`, criteria);
    }

}
