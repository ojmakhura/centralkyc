// Generated by andromda-angular cartridge (service\service.impl.ts.vsl) CAN EDIT
import { Injectable, inject } from '@angular/core';
import { Observable } from 'rxjs';
import { IndividualListDTO } from '@app/model/bw/co/centralkyc/individual/individual-list-dto';
import { IndividualDTO } from '@app/model/bw/co/centralkyc/individual/individual-dto';
import { HttpClient } from '@angular/common/http';
import { Page } from '@app/model/page.model';
import { SearchObject } from '@app/model/search-object';
import { RestApiResponse } from '@app/model/rest-api-response.model';

@Injectable({
  providedIn: 'root'
})
export class IndividualApi {
    
    protected path = '/individual';

    private http = inject(HttpClient);

    public findById(id: string | any ): Observable<RestApiResponse<IndividualDTO | any>> {

        return this.http.get<RestApiResponse<IndividualDTO | any>>(`${this.path}/${id}`);
    }

    public getAll(): Observable<RestApiResponse<IndividualListDTO[] | any[]>> {

        return this.http.get<RestApiResponse<IndividualListDTO[] | any[]>>(`${this.path}`);
    }

    public getAllPaged(pageNumber: number | any , pageSize: number | any ): Observable<RestApiResponse<Page<IndividualListDTO> | any>> {

        return this.http.get<RestApiResponse<Page<IndividualListDTO> | any>>(`${this.path}/paged?pageNumber=${pageNumber}&pageSize=${pageSize}`);
    }

    public getOrganisationClients(organisationId: string | any ): Observable<RestApiResponse<IndividualListDTO[] | any[]>> {

        return this.http.get<RestApiResponse<IndividualListDTO[] | any[]>>(`${this.path}/organisation/{organisationId}/organisationId/${organisationId}`);
    }

    public getOrganisationClientsPaged(organisationId: string | any , pageNumber: number | any , pageSize: number | any ): Observable<RestApiResponse<Page<IndividualListDTO> | any>> {

        return this.http.get<RestApiResponse<Page<IndividualListDTO> | any>>(`${this.path}/organisation/${organisationId}/paged?pageNumber=${pageNumber}&pageSize=${pageSize}`);
    }

    public pagedSearch(criteria: SearchObject<IndividualSearchCriteria> | any ): Observable<RestApiResponse<Page<IndividualListDTO> | any>> {

        return this.http.post<RestApiResponse<Page<IndividualListDTO> | any>>(`${this.path}/search/paged`, criteria);
    }

    public remove(id: string | any ): Observable<RestApiResponse<boolean | any>> {

        return this.http.delete<RestApiResponse<boolean | any>>(`${this.path}/${id}`);
    }

    public save(individual: IndividualDTO | any ): Observable<RestApiResponse<IndividualDTO | any>> {

        return this.http.post<RestApiResponse<IndividualDTO | any>>(`${this.path}`, individual);
    }

    public search(criteria: SearchObject<IndividualSearchCriteria> | any ): Observable<RestApiResponse<IndividualListDTO[] | any[]>> {

        return this.http.post<RestApiResponse<IndividualListDTO[] | any[]>>(`${this.path}/search`, criteria);
    }

}
